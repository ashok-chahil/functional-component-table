{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","container","maxHeight","drawer","flexShrink","drawerPaper","drawerHeader","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","App","classes","useState","page","setPage","passangerData","passangerArray","setPassangerArray","rowsPerPage","setRowsPerPage","right","open","setOpen","selectedRow","setSelectedRow","isSearchActive","setSearchStatus","className","style","position","minHeight","Paper","margin","height","paddingLeft","type","id","name","placeholder","onChange","event","search_value","target","value","results","i","length","startsWith","toLowerCase","push","multiple","InputProps","startAdornment","InputAdornment","TableContainer","Table","TableHead","TableRow","TableCell","fontSize","TableBody","map","item","index","color","cursor","onClick","modal","handleDrawerOpen","pnr","from_location","to_location","date_of_journey","passanger_name","contact","total_amount","slice","TablePagination","rowsPerPageOptions","component","count","onChangePage","newPage","onChangeRowsPerPage","Fragment","Drawer","variant","anchor","paper","role","TextField","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bed5b20.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport './App.css';\nimport clsx from 'clsx';\nimport passangerData from \"./passangerDetails.json\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Drawer from \"@material-ui/core/Drawer\";\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\"\n  },\n  container: {\n    maxHeight: 440\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n}));\n\n\nexport default function App() {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [passangerArray, setPassangerArray] = useState(passangerData);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [state, setState] = useState({\n    right: false\n  });\n  const [open, setOpen] = useState(false)\n  const [selectedRow, setSelectedRow ] = useState({});\n  const [isSearchActive, setSearchStatus] = useState(false);\n\n  const handleDrawerOpen = (event) => {\n    setOpen(true);\n    const modal = isSearchActive ? passangerArray[event] : passangerData[event]\n    setSelectedRow(modal);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const onSearch = (event) => {\n    const search_value = event.target.value;\n    if (!search_value) {\n      setPassangerArray(passangerData);\n      return;\n    }\n    var results = [];\n    var searchField = \"pnr\";\n    for (var i = 0; i < passangerData.length; i++) {\n      if (\n        passangerData[i][searchField].startsWith(search_value.toLowerCase())\n      ) {\n        results.push(passangerData[i]);\n      }\n    }\n    setPassangerArray(results);\n    setSearchStatus(search_value ? true : false)\n  };\n\n  const getTableData = () => {\n    return passangerArray.map((item, index) => {\n      \n      return (\n        <TableRow>\n          <TableCell className=\"table-font\"\n            style={{ color: \"blue\", cursor: \"pointer\",fontSize:\"14px\" }}\n            onClick={(item) => handleDrawerOpen(index)}\n          >\n            {item.pnr}\n          </TableCell>\n          <TableCell style={{fontSize:\"14px\"}}>{item.from_location}</TableCell>\n          <TableCell style={{fontSize:\"14px\"}}>{item.to_location}</TableCell>\n          <TableCell style={{fontSize:\"14px\"}}>{item.date_of_journey}</TableCell>\n          <TableCell style={{fontSize:\"14px\"}}>{item.passanger_name}</TableCell>\n          <TableCell style={{fontSize:\"14px\"}}>{item.contact}</TableCell>\n          <TableCell style={{fontSize:\"14px\"}}>{item.total_amount}</TableCell>\n        </TableRow>\n      );\n    });\n  };\n\n\n\n  return (\n    <div className=\"container-fluid m-5 App\">\n      <h1>Passanger List</h1>\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n          <div style={{ position: \"relative\", minHeight: \"400px\" }}>\n            <Paper className={classes.root}>\n              <div style={{ margin: \"20px 0px\", width: \"100%\" }}>\n                <input\n                  style={{ height: \"35px\", width: \"100%\", paddingLeft: \"15px\" }}\n                  type=\"search\"\n                  id=\"Search\"\n                  name=\"Search\"\n                  placeholder=\"Search by PNR\"\n                  onChange={onSearch}\n                  // value={value}\n                  margin=\"none\"\n                  multiple\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <i className=\"zmdi zmdi-search zmdi-hc-fw \" />\n                      </InputAdornment>\n                    )\n                  }}\n                />\n              </div>\n              <TableContainer className={classes.container}>\n                <Table className=\"table\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell style={{fontSize:\"14px\"}}>PNR</TableCell>\n                      <TableCell style={{fontSize:\"14px\"}}>From Location</TableCell>\n                      <TableCell style={{fontSize:\"14px\"}}>To Location</TableCell>\n                      <TableCell style={{fontSize:\"14px\"}}>Date of Journey</TableCell>\n                      <TableCell style={{fontSize:\"14px\"}}>Name</TableCell>\n                      <TableCell style={{fontSize:\"14px\"}}>Contact Number</TableCell>\n                      <TableCell style={{fontSize:\"14px\"}}>Total Amount</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {passangerData.length ? (\n                      [\n                        getTableData().slice(\n                          page * rowsPerPage,\n                          page * rowsPerPage + rowsPerPage\n                        )\n                      ]\n                    ) : (\n                      <TableRow>\n                        <TableCell>No Data Available</TableCell>\n                      </TableRow>\n                    )}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Paper>\n          </div>\n        </div>\n      </div>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        style={{ fontSize: \"14px\" }}\n        count={passangerArray.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n      <div>\n          <React.Fragment>\n            <Drawer\n              className={classes.drawer}\n              variant=\"persistent\"\n              anchor=\"right\"\n              open={open}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              onClick={handleDrawerClose}\n            >\n            {\n            // selectedIndex && selectedIndex >= 0 && selectedIndex < passangerData.length ? \n            \n            \n            <div\n                role=\"presentation\"\n              >\n                <div style={{ margin:\"20px 10px\" }}>\n                  Passanger Details\n                </div>\n                <div style={{ margin:\"20px 10px\" }}>\n                  <label className=\"label\">PNR</label>\n                  <div>\n                    <TextField\n                      disabled\n                      id=\"outlined-disabled\"\n                      variant=\"outlined\"\n                      id=\"pnr\"\n                      value={selectedRow.pnr}\n                    />\n                  </div>\n                </div>\n                <div style={{ margin:\"20px 10px\" }}>\n                  <label className=\"label\">From</label>\n                  <div>\n                    <TextField\n                      id=\"from\"\n                      value={selectedRow.from_location}\n                      variant=\"outlined\"\n                      disabled\n                    />\n                  </div>\n                </div>\n                <div style={{ margin:\"20px 10px\" }}>\n                  <label className=\"label\">To</label>\n                  <div>\n                    <TextField\n                      id=\"to\"\n                      value={selectedRow.to_location}\n                      variant=\"outlined\"\n                      disabled\n                    />\n                  </div>\n                </div>\n                <div style={{ margin:\"20px 10px\" }}>\n                  <label className=\"label\">DATE OF JOURNEY</label>\n                  <div>\n                  <TextField\n                    id=\"date\"\n                    value={selectedRow.date_of_journey}\n                    variant=\"outlined\"\n                    disabled\n                  />\n                  </div>\n                </div>\n                <div style={{ margin:\"20px 10px\" }}>\n                  <label className=\"label\">Name</label>\n                  <div>\n                    <TextField\n                      id=\"name\"\n                      value={selectedRow.passanger_name}\n                      variant=\"outlined\"\n                      disabled\n                  />\n                  </div>\n                </div>\n                <div style={{ margin:\"20px 10px\" }}>\n                  <label className=\"label\">CONTACT</label>\n                  <div>\n                    <TextField\n                      id=\"contact\"\n                      value={selectedRow.contact}\n                      variant=\"outlined\"\n                      disabled\n                    />\n                  </div>\n                </div>\n                <div style={{ margin:\"20px 10px\" }}>\n                  <label className=\"label\">TOTAL AMOUNT</label>\n                  <div>\n                    <TextField\n                      id=\"amount\"\n                      value={selectedRow.total_amount}\n                      variant=\"outlined\"\n                      disabled\n                    />\n                  </div>\n                </div>\n              </div>\n            // : \"\"\n            }\n            </Drawer>\n          </React.Fragment>\n      </div>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}